"""create blog posts table and vectorizer

Revision ID: {revision_id}
Revises: {revises}
Create Date: {create_date}
"""
from alembic import op
from pgai.alembic import CreateVectorizerOp, DropVectorizerOp
import sqlalchemy as sa
from pgai.configuration import ChunkingConfig, DiskANNIndexingConfig, OpenAIEmbeddingConfig, ProcessingConfig, SchedulingConfig

# revision identifiers
revision = '{revision_id}'
down_revision = '{down_revision}'
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('blog_posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.Text(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_vectorizer(
        'blog_posts',
        embedding=OpenAIEmbeddingConfig(
        model='text-embedding-3-small',
        dimensions=768,
        chat_user='test_user',
        api_key_name='test_key'
    ),
        chunking=ChunkingConfig(
        chunk_column='content',
        chunk_size=500,
        chunk_overlap=10,
        separator=' ',
        is_separator_regex=True
    ),
        scheduling=SchedulingConfig(
        schedule_interval= "1h",
        initial_start= "2022-01-01T00:00:00Z",
        fixed_schedule= True,
        timezone= "UTC"
    ),
        {indexing},
        processing=ProcessingConfig(
        batch_size=10,
        concurrency=5
    ),
        target_schema='timescale',
        target_table='blog_posts_embedding',
        view_schema='timescale',
        view_name='blog_posts_embedding_view',
        queue_schema='timescale',
        queue_table='blog_posts_embedding_queue',
        formatting_template='Title: $title\nContent: $chunk',
        grant_to=['test_user', 'test_user2']
    )
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_vectorizer(1, drop_all=True)
    op.drop_table('blog_posts')
    # ### end Alembic commands ###